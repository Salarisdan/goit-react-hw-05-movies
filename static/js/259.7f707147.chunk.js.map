{"version":3,"file":"static/js/259.7f707147.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,2HCXYI,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAWG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAc5B,OAAQA,MAG3B,EC1BD,EAJe,WACb,OAAO,SAACU,EAAD,GACR,C,8LCFKoB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADgB,gCAGT,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,OAEnBjC,EAASiC,EAASC,KAAKC,QAAQhC,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBG,MAA1B,EAAOA,MAAP,IAFhB,kBAGlBT,GAHkB,2CAAH,qDAMXoC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBO,EADrB,2BADG,cACpBJ,EADoB,OAIpBjC,EAASiC,EAASC,KAAKC,QAAQhC,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBG,MAA1B,EAAOA,MAAP,IAJf,kBAKnBT,GALmB,2CAAH,sDAQZsC,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACQT,EADR,oBADM,cACvBG,EADuB,OAIvB7B,EAAQ6B,EAASC,KAJM,kBAKtB9B,GALsB,2CAAH,sDAQfoC,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBX,EADjB,oBADM,cACvBG,EADuB,OAIvBS,EAAUT,EAASC,KAAKS,KAAKxC,KACjC,kBAA4C,CAC1CyC,KADF,EAAGA,KAEDC,UAFF,EAASA,UAGPC,aAHF,EAAoBA,aAIlBxC,GAJF,EAAkCA,GAAlC,IAL2B,kBAYtBoC,GAZsB,2CAAH,sDAefK,EAAgB,mCAAG,WAAMN,GAAN,yFACPV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBX,EADjB,2BADO,cACxBG,EADwB,OAIxBe,EAAUf,EAASC,KAAKC,QAAQhC,KAAI,kBAA8B,CACtE8C,OADwC,EAAGA,OAE3CC,QAFwC,EAAWA,QAGnD5C,GAHwC,EAAoBA,GAApB,IAJZ,kBASvB0C,GATuB,2CAAH,qD","sources":["components/TrendingList/TrendingListSx.jsx","components/SearchForm/SearchFormSx.jsx","pages/MoviesSx.jsx","utils/api/apiMoviedbSx.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","// import { useSearchMovies } from 'utils/hooks/useSearchMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../utils/api/apiMoviedbSx';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingListSx';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};","import { SearchForm } from 'components/SearchForm/SearchFormSx';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = 'f864ef6a91b9e0820f1a60a4087912c5';\nconst BASE_URL ='https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const movie = response.data;\n  return movie;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    })\n  );\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n  return reviews;\n};\n\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","e","query","target","value","preventDefault","type","placeholder","API_KEY","axios","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","credits","cast","name","character","profile_path","getMoviesReviews","reviews","author","content"],"sourceRoot":""}