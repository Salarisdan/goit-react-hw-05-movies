{"version":3,"file":"static/js/498.be41b372.chunk.js","mappings":"8PAqCA,EAjCa,WACX,IACA,ECH6B,SAACA,GAC9B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACwBC,EAAAA,GAAoBL,GAD5C,OACQM,EADR,OAEEH,EAAgBG,GAFlB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDTmCM,EADdC,EAAAA,EAAAA,MAAZT,SACAU,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAEnB,OAAKD,GAAcC,GAKjB,0BACE,wBACGA,EAAWC,KAAI,SAAAC,GAAI,OAClB,0BACGA,EAAKC,eACJ,gBACEC,MAAO,IACPC,IAAG,0DAAqDH,EAAKC,cAC7DG,IAAKJ,EAAKK,QAGd,uBAAIL,EAAKK,QACT,uCAAeL,EAAKM,eATbN,EAAKO,GADI,QANjB,IAsBV,C,sKE7BKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADgB,gCAGT,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,OAEnBC,EAASD,EAASE,KAAKC,QAAQf,KAAI,kBAAoB,CAAEQ,GAAtB,EAAGA,GAAuBQ,MAA1B,EAAOA,MAAP,IAFhB,kBAGlBH,GAHkB,2CAAH,qDAcXI,EAAe,mCAAG,WAAM7B,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,oBACQqB,EADR,oBADM,cACvBG,EADuB,OAIvBM,EAAQN,EAASE,KAJM,kBAKtBI,GALsB,2CAAH,sDAQfC,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBX,EADjB,oBADM,cACvBG,EADuB,OAIvBlB,EAAUkB,EAASE,KAAKb,KAAKD,KACjC,kBAA4C,CAC1CM,KADF,EAAGA,KAEDC,UAFF,EAASA,UAGPL,aAHF,EAAoBA,aAIlBM,GAJF,EAAkCA,GAAlC,IAL2B,kBAYtBd,GAZsB,2CAAH,sDAef2B,EAAgB,mCAAG,WAAMD,GAAN,yFACPV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBX,EADjB,2BADO,cACxBG,EADwB,OAIxBU,EAAUV,EAASE,KAAKC,QAAQf,KAAI,kBAA8B,CACtEuB,OADwC,EAAGA,OAE3CC,QAFwC,EAAWA,QAGnDhB,GAHwC,EAAoBA,GAApB,IAJZ,kBASvBc,GATuB,2CAAH,qD","sources":["components/Cast/CastSx.jsx","utils/hooks/MovieCredits.jsx","utils/api/apiMoviedbSx.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'utils/hooks/MovieCredits';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { isLoading, moviesCast } = useMovieCredits(movieId);\n\n  if (!isLoading && !moviesCast) {\n    return null;\n  }\n\n  return (\n    <div>\n      <ul>\n        {moviesCast.map(cast => (\n          <li key={cast.id}>\n            {cast.profile_path && (\n              <img\n                width={100}\n                src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`}\n                alt={cast.name}\n              />\n            )}\n            <p>{cast.name}</p>\n            <p>Character: {cast.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import * as API from '../api/apiMoviedbSx';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieCredits = (movieId) => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieCredits() {\n      const credits = await API.getMovieCredits(movieId);\n      setMovieCredits(credits);\n    }\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return { movieCredits };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'f864ef6a91b9e0820f1a60a4087912c5';\nconst BASE_URL ='https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const movie = response.data;\n  return movie;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    })\n  );\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n  return reviews;\n};\n\n"],"names":["movieId","useState","movieCredits","setMovieCredits","useEffect","API","credits","fetchMovieCredits","useMovieCredits","useParams","isLoading","moviesCast","map","cast","profile_path","width","src","alt","name","character","id","API_KEY","axios","getTrending","response","movies","data","results","title","getMovieDetails","movie","getMovieCredits","moviesId","getMoviesReviews","reviews","author","content"],"sourceRoot":""}