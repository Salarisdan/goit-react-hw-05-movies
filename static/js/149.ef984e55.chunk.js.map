{"version":3,"file":"static/js/149.ef984e55.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,4HCZYI,EAAa,WAExB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAhBW,SAAAC,GAEnBR,EAAgB,CAAES,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBACH,EAYG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,wBAGF,SAAC7B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,EC7BD,EAJe,WACb,OAAO,SAACU,EAAD,GACR,C,+LCFKoB,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAIV,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,OAEnBjC,EAASiC,EAASC,KAAKC,QAAQhC,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBG,MAA1B,EAAOA,MAAP,IAFhB,kBAGlBT,GAHkB,2CAAH,qDAMXoC,EAAY,mCAAG,WAAOC,GAAP,yFACHN,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,EAApD,2BADG,cACpBJ,EADoB,OAEpBjC,EAASiC,EAASC,KAAKC,QAAQhC,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBG,MAA1B,EAAOA,MAAP,IAFf,kBAGnBT,GAHmB,2CAAH,sDAMZsC,EAAe,mCAAG,WAAOC,GAAP,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBAAuCT,EAAvC,oBADM,cACvBG,EADuB,OAEvB7B,EAAQ6B,EAASC,KAFM,kBAGtB9B,GAHsB,2CAAH,sDAMfoC,EAAe,mCAAG,WAAOC,GAAP,yFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAAgDX,EAAhD,oBADM,cACvBG,EADuB,OAEvBS,EAAUT,EAASC,KAAKS,KAAKxC,KAAI,kBAA4C,CAAEyC,KAA9C,EAAGA,KAAiDC,UAApD,EAASA,UAAsDC,aAA/D,EAAoBA,aAAyDxC,GAA7E,EAAkCA,GAAlC,IAFV,kBAGtBoC,GAHsB,2CAAH,sDAMfK,EAAgB,mCAAG,WAAON,GAAP,yFACPV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAAgDX,EAAhD,2BADO,cACxBG,EADwB,OAExBe,EAAUf,EAASC,KAAKC,QAAQhC,KAAI,kBAA8B,CAAE8C,OAAhC,EAAGA,OAAqCC,QAAxC,EAAWA,QAAsC5C,GAAjD,EAAoBA,GAApB,IAFZ,kBAGvB0C,GAHuB,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport * as API from '../../utils/api/apiMoviedb';\n\nexport const SearchForm = () => {\n  // Initialize state variables for movie search results and search parameters\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    // Set search parameters based on input field value and prevent default form submission behavior\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n  };\n\n  // Effect hook to fetch search results when search parameters change\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {/* Render a list of trending movies or search results */}\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '11517d6931d2b5137dd13eb45c72b984';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const searchMovies = async (inputValue) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  const movie = response.data;\n  return movie;\n};\n\nexport const getMovieCredits = async (moviesId) => {\n  const response = await axios.get(`/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`);\n  const credits = response.data.cast.map(({ name, character, profile_path, id }) => ({ name, character, profile_path, id }));\n  return credits;\n};\n\nexport const getMoviesReviews = async (moviesId) => {\n  const response = await axios.get(`/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  const reviews = response.data.results.map(({ author, content, id }) => ({ author, content, id }));\n  return reviews;\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","e","query","target","value","preventDefault","type","placeholder","API_KEY","axios","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","credits","cast","name","character","profile_path","getMoviesReviews","reviews","author","content"],"sourceRoot":""}