{"version":3,"file":"static/js/181.30bf6fb7.chunk.js","mappings":"+PA+BA,EA3Ba,WACX,IACA,ECH6B,SAACA,GAC9B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACwBC,EAAAA,GAAoBL,GAD5C,OACQM,EADR,OAEEH,EAAgBG,GAFlB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDT0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACE,0BACE,wBACGA,EAAaQ,KAAI,SAAAC,GAAI,OACpB,2BACE,gBACEC,MAAO,IACPC,IAAG,0DAAqDF,EAAKG,cAC7DC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,uCAAeL,EAAKM,eAPbN,EAAKO,GADM,OAc7B,C,+LEvBKC,EAAU,mCAIhBC,EAAAA,EAAAA,SAAAA,QAFE,kFAIK,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,OAEnBC,EAASD,EAASE,KAAKC,QAAQf,KAAI,kBAAoB,CAAEQ,GAAtB,EAAGA,GAAuBQ,MAA1B,EAAOA,MAAP,IAFhB,kBAGlBH,GAHkB,2CAAH,qDAMXI,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBS,EADrB,2BADG,cACpBN,EADoB,OAIpBC,EAASD,EAASE,KAAKC,QAAQf,KAAI,kBAAoB,CAAEQ,GAAtB,EAAGA,GAAuBQ,MAA1B,EAAOA,MAAP,IAJf,kBAKnBH,GALmB,2CAAH,sDAQZM,EAAe,mCAAG,WAAM7B,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,oBACQmB,EADR,oBADM,cACvBG,EADuB,OAIvBQ,EAAQR,EAASE,KAJM,kBAKtBM,GALsB,2CAAH,sDAQfC,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBb,EADjB,oBADM,cACvBG,EADuB,OAIvBhB,EAAUgB,EAASE,KAAKb,KAAKD,KACjC,kBAA4C,CAC1CM,KADF,EAAGA,KAEDC,UAFF,EAASA,UAGPH,aAHF,EAAoBA,aAIlBI,GAJF,EAAkCA,GAAlC,IAL2B,kBAYtBZ,GAZsB,2CAAH,sDAef2B,EAAgB,mCAAG,WAAMD,GAAN,yFACPZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBb,EADjB,2BADO,cACxBG,EADwB,OAIxBY,EAAUZ,EAASE,KAAKC,QAAQf,KAAI,kBAA8B,CACtEyB,OADwC,EAAGA,OAE3CC,QAFwC,EAAWA,QAGnDlB,GAHwC,EAAoBA,GAApB,IAJZ,kBASvBgB,GATuB,2CAAH,qD","sources":["components/Cast/Cast.jsx","utils/hooks/useMovieCredits.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'utils/hooks/useMovieCredits';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredits } = useMovieCredits(movieId);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(cast => (\n          <li key={cast.id}>\n            <img\n              width={100}\n              src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`}\n              alt={cast.name}\n            />\n            <p>{cast.name}</p>\n            <p>Character: {cast.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import * as API from '../api/apiMoviedb';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieCredits = (movieId) => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieCredits() {\n      const credits = await API.getMovieCredits(movieId);\n      setMovieCredits(credits);\n    }\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return { movieCredits };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'f864ef6a91b9e0820f1a60a4087912c5';\nconst BASE_URL =\n  'https://api.themoviedb.org/3/movie/550?api_key=f864ef6a91b9e0820f1a60a4087912c5';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const movie = response.data;\n  return movie;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    })\n  );\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n  return reviews;\n};\n"],"names":["movieId","useState","movieCredits","setMovieCredits","useEffect","API","credits","fetchMovieCredits","useMovieCredits","useParams","map","cast","width","src","profile_path","alt","name","character","id","API_KEY","axios","getTrending","response","movies","data","results","title","searchMovies","inputValue","getMovieDetails","movie","getMovieCredits","moviesId","getMoviesReviews","reviews","author","content"],"sourceRoot":""}