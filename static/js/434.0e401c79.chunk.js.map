{"version":3,"file":"static/js/434.0e401c79.chunk.js","mappings":"+PA0BA,EAvBgB,WACd,IACA,ECF6B,SAACA,GAC9B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACwBC,EAAAA,GAAqBL,GAD7C,OACQM,EADR,OAEEH,EAAgBG,GAFlB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDV0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACE,2BAC4B,KAAb,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,UACb,qEAEF,wBACGR,EAAaS,KAAI,SAAAC,GAChB,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LEtBKC,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFgB,+BAIT,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,OAEnBC,EAASD,EAASE,KAAKC,QAAQX,KAAI,kBAAoB,CAAEI,GAAtB,EAAGA,GAAuBQ,MAA1B,EAAOA,MAAP,IAFhB,kBAGlBH,GAHkB,2CAAH,qDAMXI,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBS,EADrB,2BADG,cACpBN,EADoB,OAIpBC,EAASD,EAASE,KAAKC,QAAQX,KAAI,kBAAoB,CAAEI,GAAtB,EAAGA,GAAuBQ,MAA1B,EAAOA,MAAP,IAJf,kBAKnBH,GALmB,2CAAH,sDAQZM,EAAe,mCAAG,WAAM1B,GAAN,yFACNiB,EAAAA,EAAAA,IAAA,iBACXjB,EADW,oBACQgB,EADR,oBADM,cACvBG,EADuB,OAIvBQ,EAAQR,EAASE,KAJM,kBAKtBM,GALsB,2CAAH,sDAQfC,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBb,EADjB,oBADM,cACvBG,EADuB,OAIvBW,EAAUX,EAASE,KAAKU,KAAKpB,KACjC,kBAA4C,CAC1CqB,KADF,EAAGA,KAEDC,UAFF,EAASA,UAGPC,aAHF,EAAoBA,aAIlBnB,GAJF,EAAkCA,GAAlC,IAL2B,kBAYtBe,GAZsB,2CAAH,sDAefK,EAAgB,mCAAG,WAAMN,GAAN,yFACPZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBb,EADjB,2BADO,cACxBG,EADwB,OAIxBb,EAAUa,EAASE,KAAKC,QAAQX,KAAI,kBAA8B,CACtEE,OADwC,EAAGA,OAE3CC,QAFwC,EAAWA,QAGnDC,GAHwC,EAAoBA,GAApB,IAJZ,kBASvBT,GATuB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/hooks/useMovieReviews.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieReviews } from 'utils/hooks/useMovieReviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { movieReviews } = useMovieReviews(movieId);\n\n  return (\n    <div>\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import * as API from '../api/apiMoviedb';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieReviews = (movieId) => {\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      const reviews = await API.getMoviesReviews(movieId);\n      setMovieReviews(reviews);\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return { movieReviews };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'f864ef6a91b9e0820f1a60a4087912c5';\nconst BASE_URL ='https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  const movies = response.data.results.map(({ id, title }) => ({ id, title }));\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const movie = response.data;\n  return movie;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    })\n  );\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n  return reviews;\n};\n"],"names":["movieId","useState","movieReviews","setMovieReviews","useEffect","API","reviews","fetchMovieReviews","useMovieReviews","useParams","length","map","review","author","content","id","API_KEY","axios","getTrending","response","movies","data","results","title","searchMovies","inputValue","getMovieDetails","movie","getMovieCredits","moviesId","credits","cast","name","character","profile_path","getMoviesReviews"],"sourceRoot":""}